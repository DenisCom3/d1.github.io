{"version":3,"sources":["components/ToDoCard/ToDoCard.module.css","components/switchTheme/SwitchTheme.module.css","components/input/MyInput.module.css","components/input/InputFilter.module.css","components/list/List.module.css","components/modal/Modal.module.css","components/button/Button.module.css","components/addTodo/ToDoForm.module.css","components/select/MySelect.module.css","reportWebVitals.ts","components/button/Button.tsx","components/input/MyInput.tsx","components/addTodo/ToDoForm.tsx","context.ts","components/input/InputFilter.tsx","components/list/List.tsx","types/types.tsx","components/modal/Modal.tsx","components/select/MySelect.tsx","components/ToDoCard/ToDoCard.tsx","hooks/useFilter.ts","hooks/useGenerator.ts","pages/App.tsx","pages/About.tsx","components/board/BoardCard.tsx","components/delete/Delete.tsx","components/item/ItemCard.tsx","pages/Trello.tsx","components/switchTheme/SwitchTheme.tsx","Router.tsx","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Button","onClick","props","className","style","button","MyInput","onChange","value","placeholder","container","length","inputWArning","input","type","ToDoForm","idValue","create","emptyTodo","id","title","completed","useState","todo","setTodo","form","e","target","slice","preventDefault","newToDo","ThemeContext","React","createContext","theme","setTheme","console","log","InputFilter","filter","setFilter","classes","useContext","input__dark","join","query","List","list","list__dark","items","map","renderItem","Variable","Modal","children","visible","setVisible","styleClasses","myModal","push","active","myModalContent","stopPropagation","MySelect","options","customDropdown","option","name","ToDoCard","setCardStatus","card","deleteCard","success","fail","check","checked","trash","useFilter","todos","sort","filtredTodo","useMemo","a","b","localeCompare","useFiltredToDo","toLowerCase","includes","generateCardId","startId","i","useGeneratorId","cards","generateId","next","App","setThemeMod","setCards","any","variable","setVariable","IdValue","FiltredCards","sortedCards","great","setVariableSort","useEffect","fetchToDo","axios","get","response","data","error","newCards","modal","setModal","deleteToDo","prev","p","About","BoardCard","onDragOver","onDrop","board","Delete","deleteClick","ItemCard","item","color","onDragLeave","onDragStart","onDragEnd","background","draggable","Trello","boards","setboards","currentBoard","setCurrentBoard","currentItem","setCurrentItem","dragOverHandler","elem","boxShadow","currentIndex","indexOf","splice","dropCardHandler","setColor","dragLeaveHandler","setTimeout","classList","add","dragStartHandler","remove","dragEndHandler","dropIndex","dropHandler","index","deleteItem","SwitchTheme","checkbox","label","ball","Router","to","exact","path","component","Main","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a6506fd9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"success\":\"ToDoCard_success__2vD1D\",\"fail\":\"ToDoCard_fail__39ERk\",\"title\":\"ToDoCard_title__3ZItu\",\"container\":\"ToDoCard_container__1Ntws\",\"check\":\"ToDoCard_check__31Zv8\",\"trash\":\"ToDoCard_trash__jkUo7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SwitchTheme_container__2Ne5d\",\"checkbox\":\"SwitchTheme_checkbox__2Ss_E\",\"label\":\"SwitchTheme_label__2UZDM\",\"ball\":\"SwitchTheme_ball__1xe1_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWArning\":\"MyInput_inputWArning__Bq-4F\",\"input\":\"MyInput_input__25w8N\",\"container\":\"MyInput_container__2SCJt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"InputFilter_container__3WyTl\",\"input\":\"InputFilter_input__1XBYP\",\"input__dark\":\"InputFilter_input__dark__1fFJO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"List_list__1I3-0\",\"list__dark\":\"List_list__dark__7Hdjz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myModal\":\"Modal_myModal__3_Zoj\",\"myModalContent\":\"Modal_myModalContent__2ZXvk\",\"active\":\"Modal_active__2wD3T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2ufsG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ToDoForm_form__3Qywq\",\"input\":\"ToDoForm_input__1bxro\",\"inputWArning\":\"ToDoForm_inputWArning__3-GMI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"customDropdown\":\"MySelect_customDropdown__35zRC\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { FC, } from 'react'\r\nimport style from '../button/Button.module.css'\r\n\r\ninterface Props {\r\n\t\r\n\tonClick: ((e: React.MouseEvent<HTMLButtonElement>)=>void)\r\n\t\r\n}\r\n\r\nconst Button: FC<Props> = ({onClick,  ...props}) => {\r\n\treturn (\r\n\t\t<button {...props} onClick={onClick}  className={style.button}>\r\n\t\t\t\r\n\t\t</button>\r\n\t)\r\n}\r\n\r\nexport default Button\r\n","import React, { FC } from 'react'\r\nimport style from '../input/MyInput.module.css'\r\n\r\ninterface Props {\r\n\tvalue: string\r\n\tonChange: (e:React.ChangeEvent<HTMLInputElement>) => void\r\n\tplaceholder?: string\r\n\t\r\n}\r\n\r\nconst MyInput: FC<Props> = ({ onChange,value, placeholder}) => {\r\n\r\n\r\n\tconst maxLength = 75\r\n\t\r\n\treturn (\r\n\t\t<div className={style.container} >\r\n\t\t<input className={value.length ===maxLength ?style.inputWArning : style.input} value={value} onChange={onChange} type='text' placeholder={placeholder}/>\r\n\t\t<span>{value.length===maxLength ? \"Допускается не более 75 символов\" : \"\"  }\r\n\t\t</span>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default MyInput\r\n","import React, {  FC, useState } from 'react'\r\nimport { ToDo } from '../../types/types'\r\nimport Button from '../button/Button'\r\nimport MyInput from '../input/MyInput'\r\nimport style from \"../addTodo/ToDoForm.module.css\"\r\n\r\ninterface Props {\r\n\tcreate: (v: ToDo) => void\r\n\tidValue: number\r\n}\r\n\r\nconst ToDoForm: FC<Props> = ({idValue,create}) => {\r\n\r\n\tconst emptyTodo: ToDo = {id: 0, title: '', completed: false}\r\n\tconst [todo, setTodo] = useState<ToDo>(emptyTodo)\r\n\r\n\t\r\n\r\n\r\n\tconst addNewToDo = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n\t  e.preventDefault()\r\n\t  const newToDo ={\r\n\t\t...todo, id: idValue\r\n\t  }\r\n\t  create(newToDo)\r\n\t  setTodo(emptyTodo)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form  className={style.form} >\r\n\t\t\t<MyInput value ={todo.title} onChange={(e:React.ChangeEvent<HTMLInputElement>) => setTodo({...todo, title: (e.target.value).slice(0,75)})} \r\n\t\t\tplaceholder='Что нужно сделать?'  />\t\r\n\t\t\t<Button onClick={addNewToDo} >Create ToDo</Button>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default ToDoForm\r\n","import React from 'react';\r\n\r\nconst ThemeContext = React.createContext<{theme:boolean, setTheme:Function}>({theme: false, setTheme:()=>console.log()})\r\n\r\nexport default ThemeContext","import  React,{ ChangeEvent, FC, useContext } from \"react\"\r\nimport ThemeContext from \"../../context\"\r\nimport style from '../input/InputFilter.module.css'\r\n\r\ninterface Props {\r\n\r\n\tfilter: {sort: string, query: string}\r\n\tsetFilter: ((e: ChangeEvent<HTMLInputElement>) => void)\r\n}\r\n\r\nexport const InputFilter:FC<Props> = ({ filter, setFilter}) => {\r\n\t\r\n\tconst {theme} = useContext(ThemeContext)\r\n\tconst classes = (theme ? [style.input, style.input__dark] : [style.input]).join(' ')\r\n\t\r\n\treturn (\r\n\t\t\r\n\t\t\t<input className={classes} value={filter.query} onChange={setFilter} type=\"text\" placeholder='Search...' />\r\n\t\t\r\n\t)\r\n}\r\n","import React, { useContext } from 'react'\r\nimport ThemeContext from '../../context'\r\nimport style from './List.module.css'\r\n\r\ninterface Props<T> {\r\n\titems: T[],\r\n\trenderItem: (item: T) => React.ReactNode\r\n}\r\nexport default function List<T>(props: Props<T>){\r\n\r\n\tconst {theme} = useContext(ThemeContext)\r\n\r\n\treturn (\r\n\t\t\r\n\t\t<div className={theme ? [style.list, style.list__dark].join(' ') : style.list}>\r\n\t\t\t{props.items.map(props.renderItem)}\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\n","export interface ToDo{\r\n\tid: number \r\n\ttitle: string\r\n\tcompleted: boolean \r\n}\r\n\r\n\r\nexport interface IUser {\r\n\tid:  number\r\n\tname: string\r\n\temail: string\r\n\tadress: IAddress\r\n}\r\n\r\nexport interface IAddress {\r\n\tstreet: string\r\n\tcity: string\r\n}\r\n\r\nexport enum Variable {\r\n\tany = 'any',\r\n\tgreat = 'great',\r\n\tfail = 'fail'\r\n}\r\n\r\n\r\n export interface Item{\r\n\tid: number\r\n\ttitle:string\r\n}\r\n\r\n export interface Board{\r\n\tid:number\r\n\ttitle: string\r\n\titems: Item[]\r\n}\r\n\r\n\r\n\r\nexport function* generateCardId(startId: number  ) {\r\n\r\n\r\n\r\n\tfor (let i = startId+1; i < 10000; i++) {\r\n\t\tyield i;\r\n\t\t\t\r\n\t}\r\n\treturn 0\r\n}","import React, { FC } from 'react'\r\nimport style from '../modal/Modal.module.css'\r\n\r\ninterface Props {\r\n\t\r\n\tvisible: boolean\r\n\tsetVisible: (v: boolean) => void\r\n\r\n}\r\n\r\n const Modal: FC<Props> = ({children, visible, setVisible}) => {\r\n\r\n\tconst styleClasses = [style.myModal]\r\n\t\tif(visible) styleClasses.push(style.active)\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className={styleClasses.join(' ')} onClick={() => setVisible(false)}>\r\n\t\t\t<div className={style.myModalContent} onClick={(e) => e.stopPropagation()}>\r\n\t\t\t\t{children}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Modal\r\n\r\n\r\n","import React, { ChangeEvent, FC } from 'react'\r\nimport { Variable } from '../../types/types'\r\nimport style from '../select/MySelect.module.css'\r\n\r\ninterface Option {\r\n\tvalue: Variable\r\n\tname: string\r\n}\r\n\r\ninterface Props {\r\n\tvalue: Variable\r\n\tdefaultValue?: string\r\n\toptions: Option[]\r\n\tonChange: Function\r\n\r\n}\r\n\r\nconst MySelect: FC<Props> = ({ value, options, onChange }) => {\r\n\treturn (\r\n\t\t<span className={style.customDropdown} >\r\n\t\t\t<select value={value} onChange={(e: ChangeEvent<HTMLSelectElement>) => onChange(e)}>\r\n\t\t\t\t{options.map(option =>\r\n\t\t\t\t\t<option key={option.value} value={option.value}>{option.name}</option>\r\n\t\t\t\t)}\r\n\t\t\t</select>\r\n\t\t</span>\r\n\r\n\t)\r\n}\r\n\r\nexport default MySelect\r\n","\r\nimport React from 'react';\r\n\r\nimport{ ToDo } from '../../types/types';\r\nimport style from '../ToDoCard/ToDoCard.module.css'\r\ninterface Props {\r\n\tid: number | null,\r\n\ttitle: string,\r\n\tcompleted: boolean | null\r\n\tsetCardStatus: (id: number) => void\r\n\tcard: ToDo\r\n\tdeleteCard: ((todo:ToDo) => void)\r\n\r\n\t\r\n}\r\n\r\n const ToDoCard : React.FC<Props> = ({ id, title, completed, setCardStatus, card, deleteCard}) => {\r\n\tif(id ===null) return <div></div>\r\n\r\n\treturn (\r\n\t\t<div className={completed ? style.success : style.fail}>\r\n\t\t\t<div className={style.title}>{id}. {title}</div>\r\n\t\t\t<div className={style.container}>\r\n\t\t\t\t<input type=\"checkbox\" name=\"check\" id=\"check\" className={style.check} checked={completed ? completed : false} onChange={()=> setCardStatus(id)} />\r\n\t\t\t\t<div className={style.trash} onClick={() => deleteCard(card)}></div>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t</div>\r\n\t\r\n\t)\r\n}\r\n\r\nexport default ToDoCard;\r\n\r\n\r\n\r\n\r\n","import { useMemo } from \"react\";\r\nimport { ToDo } from \"../types/types\";\r\n\r\n \r\n\r\n export const useFiltredToDo = (todos: ToDo[], sort: any) => {\r\n\t return useMemo(() => {\r\n\t\tif (sort){\r\n\t\t\treturn [...todos].sort((a,b) => a.title[sort].localeCompare(b.title[sort]))\r\n\t\t}\r\n\t\treturn todos\r\n\t},[todos, sort])\r\n}\r\n\r\n\r\nexport const useFilter = (todos: ToDo[], sort: any, query: string) => {\r\n  const filtredTodo = useFiltredToDo(todos, sort)\r\n\r\n  return useMemo(() => {\r\n\treturn filtredTodo.filter(todo =>todo.title.toLowerCase().includes(query))\r\n  },[query, filtredTodo])\r\n}\r\n\r\n\r\n\r\n","import { useMemo } from \"react\";\r\nimport { generateCardId, ToDo } from \"../types/types\";\r\n\r\n\r\n\r\n\r\nexport const useGeneratorId = (cards: ToDo[]) => {\r\n\tconst generateId = cards.length===0 ? 0 :  generateCardId((cards[cards.length-1].id))\r\n\r\n\treturn useMemo(() => {\r\n\t  return generateId !== 0 ?generateId.next().value : 1\r\n\t},[ generateId])\r\n}\r\n\r\nexport default useGeneratorId","import axios from 'axios';\nimport React, { useState, useEffect, ChangeEvent, useContext, } from 'react';\nimport '../App.css';\nimport ToDoForm from '../components/addTodo/ToDoForm';\nimport Button from '../components/button/Button';\nimport { InputFilter } from '../components/input/InputFilter';\nimport List from '../components/list/List';\nimport Modal from '../components/modal/Modal';\nimport MySelect from '../components/select/MySelect';\nimport ToDoCard from '../components/ToDoCard/ToDoCard';\nimport ThemeContext from '../context';\nimport { useFilter } from '../hooks/useFilter';\nimport useGeneratorId from '../hooks/useGenerator';\nimport { ToDo, Variable } from '../types/types';\n\nfunction App() {\n\n  // Изменение темы приложения\n  const { theme } = useContext(ThemeContext)\n  function setThemeMod(className: string) {\n    const classes = [className]\n    if (theme) classes.push(`${className}__dark`)\n    return classes.join(' ')\n  }\n\n\n  const [cards, setCards] = useState<ToDo[]>([{\n    \"id\": 1,\n    \"title\": \"delectus aut autem\",\n    \"completed\": false\n  },\n  {\n    \"id\": 2,\n    \"title\": \"quis ut nam facilis et officia qui\",\n    \"completed\": false\n  },\n  {\n    \"id\": 3,\n    \"title\": \"fugiat veniam minus\",\n    \"completed\": false\n  },\n  {\n    \"id\": 4,\n    \"title\": \"et porro tempora\",\n    \"completed\": true\n  },])\n\n\n  const [filter, setFilter] = useState({ sort: '', query: '' })\n  const [variable, setVariable] = useState<Variable>(Variable.any)\n\n\n  // Задает вариант сортировки в зависимости от выбранного в MySelect элемента\n  const setVar = (e: ChangeEvent<HTMLSelectElement>) => {\n    switch (e.target.value) {\n\n      case ('any'):\n        setVariable(Variable.any)\n        break;\n\n      case ('great'):\n        setVariable(Variable.great)\n        break;\n\n      case ('fail'):\n        setVariable(Variable.fail)\n        break;\n    }\n  }\n\n  // Генератор значений id, для уникальности ключей списка\n\n  const IdValue = useGeneratorId(cards)\n\n\n  //Возвращает новый отсортированный список\n  const setVariableSort = () => {\n    let sortedCards: ToDo[]\n\n\n    switch (variable) {\n      case Variable.any:\n        sortedCards = cards\n        break;\n\n      case Variable.great:\n        sortedCards = cards.filter(card => card.completed === true)\n        break;\n\n      case Variable.fail:\n        sortedCards = cards.filter(card => card.completed === false)\n        break;\n\n    }\n\n    return sortedCards\n  }\n\n  // Получение нового списка по двум фильтрациям (поиск по тексту/фильтр по статусу) \n  const FiltredCards = useFilter(setVariableSort(), filter.sort, filter.query)\n\n\n  useEffect(() => {\n    fetchToDo()\n  }, [])\n\n  const fetchToDo = async () => {\n    try {\n      const response = await axios.get<ToDo[]>('https://jsonplaceholder.typicode.com/todos?_limit=10')\n      setCards(response.data)\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n\n  // Изменить значение Todo.completed (завершено/не завершено)\n  const setCardStatus = (id: number) => {\n    const newCards = cards.map(card => (\n      card.id === id ? { ...card, completed: !card.completed } : card\n    ))\n    setCards(newCards)\n  }\n\n  // Отображение модального окна с новой задачей\n  const [modal, setModal] = useState(false)\n\n  const createTodo = (newToDo: ToDo) => {\n    setCards([...cards, newToDo])\n    setModal(false)\n  }\n\n  // Удаление из списка задач\n  const deleteToDo = (todo: ToDo) => {\n    setCards(prev => prev.filter(p => p !== todo))\n  }\n\n\n\n\n  return (\n    <div className={setThemeMod('App')}>\n\n      <div className={setThemeMod(\"input-container\")} >\n        <InputFilter filter={filter} setFilter={(e: ChangeEvent<HTMLInputElement>) => setFilter({ ...filter, query: e.target.value })} />\n        <MySelect\n          value={variable}\n          options={[\n            { value: Variable.any, name: 'Все' },\n            { value: Variable.great, name: 'Выполненные' },\n            { value: Variable.fail, name: 'Незавершенные' },\n          ]}\n          onChange={setVar} />\n\n        <Button onClick={() => setModal(true)}>Добавить задачу</Button>\n      </div>\n\n      <Modal visible={modal} setVisible={setModal} >\n        <ToDoForm idValue={IdValue} create={createTodo} />\n      </Modal>\n        <List items={FiltredCards}\n          renderItem={(card: ToDo) =>\n\n            <ToDoCard setCardStatus={setCardStatus} key={card.id}\n              id={card.id}\n              title={card.title}\n              completed={card.completed}\n              card={card}\n              deleteCard={deleteToDo} />\n\n               }   />\n    </div>\n  );\n}\n\nexport default App;\n","import React, { FC, useContext } from 'react'\r\nimport ThemeContext from '../context'\r\n\r\n\r\nconst About:FC = () => {\r\n\r\n\tconst {theme} = useContext(ThemeContext)\r\n\r\n\treturn (\r\n\t\t<div className={theme ? 'About About__dark' : 'About'}>\r\n\t\t\t<h1>You are Welcome!</h1>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default About\r\n","import React, { FC, ReactChild, ReactNode, useContext } from 'react'\r\nimport ThemeContext from '../../context'\r\nimport { Board } from '../../types/types'\r\n\r\ninterface Props {\r\n\tchildren: ReactChild | ReactNode\r\n\tonDragOver: (e:React.DragEvent<HTMLDivElement>) => void\r\n\tonDrop: (e:React.DragEvent<HTMLDivElement>) => void\r\n\tboard: Board\r\n\r\n\r\n}\r\n\r\nconst BoardCard:FC<Props> = ({children, onDragOver,onDrop, board }) => {\r\n\r\n\tconst {theme} = useContext(ThemeContext)\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\tclassName={theme ? 'board board_dark' : 'board' }\r\n\t\tonDragOver={onDragOver}\r\n\t\tonDrop={onDrop}\r\n\t\t>\r\n\t\t\t<div className=\"board__title\">\r\n\t\t\t\t{board.title}\r\n\t\t\t</div>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default BoardCard\r\n","import React, { FC } from 'react'\r\n\r\ninterface Props {\r\n\tdeleteClick : ()=>void\r\n}\r\n\r\nconst Delete:FC<Props> = ({deleteClick}) => {\r\n\treturn (\r\n\t\t<div className=\"delete\"\r\n\t\t onClick={() =>deleteClick()}></div>\r\n\t)\r\n}\r\n\r\nexport default Delete\r\n","import React, { FC, ReactChild, ReactNode} from 'react'\r\nimport { Item } from '../../types/types'\r\n\r\ninterface Props {\r\n\titem: Item\r\n\tcolor:() => string\r\n\tonDragOver: (e:React.DragEvent<HTMLDivElement>) => void\r\n\tonDragLeave: (e:React.DragEvent<HTMLDivElement>) => void\r\n\tonDragStart: (e:React.DragEvent<HTMLDivElement>) => void\r\n\tonDragEnd: (e:React.DragEvent<HTMLDivElement>) => void\r\n\tonDrop: (e:React.DragEvent<HTMLDivElement>) => void\r\n\tchildren: ReactChild | ReactNode\r\n\r\n\t\r\n}\r\n\r\nconst ItemCard:FC<Props> = ({item,color,onDragOver,onDragLeave,onDragStart,onDragEnd,onDrop, children}) => {\r\n\treturn (\r\n\t\t<div className='item'\r\n\t\tstyle={{background: color()}}\r\n\t\tdraggable={true}\r\n\t\tonDragOver={onDragOver}\r\n\t\tonDragLeave={onDragLeave}\r\n\t\tonDragStart={onDragStart}\r\n\t\tonDragEnd={onDragEnd}\r\n\t\tonDrop={onDrop} >\r\n\t\t\t<div className=\"item__container\">\r\n\t\t\t\t{item.title}\r\n\t\t\t\t{children}\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ItemCard\r\n","import React, { FC, useContext, useState } from 'react'\r\nimport BoardCard from '../components/board/BoardCard'\r\nimport Delete from '../components/delete/Delete'\r\nimport ItemCard from '../components/item/ItemCard'\r\nimport ThemeContext from '../context'\r\nimport { Board, Item } from '../types/types'\r\n\r\n\r\n\r\nconst Trello: FC = () => {\r\n\r\n\tconst { theme } = useContext(ThemeContext)\r\n\r\n\tconst [boards, setboards] = useState<Board[]>([\r\n\t\t{ id: 1, title: 'Не сделано', items: [{ id: 1, title: 'Пойти в магазин' }, { id: 2, title: 'Приготовить ужин' }, { id: 3, title: 'Почитать перед сном' }] },\r\n\t\t{ id: 2, title: 'Делаю', items: [{ id: 4, title: 'Обед' }, { id: 5, title: 'Послушать подкаст' },] },\r\n\t\t{ id: 3, title: 'Сделано', items: [{ id: 7, title: 'Сделать зарядку' }, { id: 8, title: 'Написать письмо' }, { id: 9, title: 'Заказать доставку' }] }\r\n\t])\r\n\r\n\tconst [currentBoard, setCurrentBoard] = useState<Board>(boards[0])\r\n\tconst [currentItem, setCurrentItem] = useState<Item | null>(null)\r\n\r\n\tconst dragOverHandler = (e: React.DragEvent) => {\r\n\t\te.preventDefault()\r\n\r\n\t\tconst elem = e.target as HTMLElement\r\n\t\tif (elem.className === 'item') {\r\n\t\t\telem.style.boxShadow = '0 4px 3px gray'\r\n\t\t}\r\n\t}\r\n\r\n\tconst dragLeaveHandler = (e: React.DragEvent<HTMLDivElement>) => {\r\n\t\tconst elem = e.target as HTMLDivElement\r\n\t\tif (elem.className === 'item') {\r\n\t\t\telem.style.boxShadow = \"none\"\r\n\t\t}\r\n\t}\r\n\tconst dragStartHandler = (e: React.DragEvent<HTMLDivElement>, board: Board, item: Item) => {\r\n\t\tsetTimeout(() => {\r\n\t\t\t(e.target as HTMLDivElement).classList.add('hide')\r\n\t\t}, 0)\r\n\t\tsetCurrentBoard(board)\r\n\t\tsetCurrentItem(item)\r\n\t}\r\n\r\n\tconst dragEndHandler = (e: React.DragEvent<HTMLDivElement>) => {\r\n\t\tconst elem = e.target as HTMLDivElement\r\n\t\telem.classList.remove('hide')\r\n\t\tif (elem.className === 'item') {\r\n\t\t\telem.style.boxShadow = \"none\"\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst dropHandler = (e: React.DragEvent<HTMLDivElement>, board: Board, item: Item) => {\r\n\t\te.preventDefault()\r\n\t\te.stopPropagation()\r\n\r\n\t\tconst elem = e.target as HTMLDivElement\r\n\t\telem.style.boxShadow = \"none\"\r\n\r\n\t\tif (currentItem !== null && currentBoard !== null) {\r\n\t\t\tconst currentIndex = currentBoard.items.indexOf(currentItem)\r\n\r\n\t\t\tcurrentBoard.items.splice(currentIndex, 1)\r\n\r\n\t\t\tconst dropIndex = board.items.indexOf(item)\r\n\t\t\tboard.items.splice(dropIndex + 1, 0, currentItem)\r\n\t\t\tsetboards(boards.map(b => {\r\n\t\t\t\tif (b.id === board.id) {\r\n\t\t\t\t\treturn board\r\n\t\t\t\t}\r\n\t\t\t\tif (b.id === currentBoard.id) {\r\n\t\t\t\t\treturn currentBoard\r\n\t\t\t\t}\r\n\t\t\t\treturn b\r\n\t\t\t}))\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tconst dropCardHandler = (e: React.DragEvent<HTMLDivElement>, board: Board) => {\r\n\t\tif (currentItem !== null) {\r\n\r\n\t\t\tif ((e.target as HTMLDivElement).className !== 'item') {\r\n\t\t\t\tboard.items.push(currentItem)\r\n\t\t\t\tconst currentIndex = currentBoard.items.indexOf(currentItem)\r\n\t\t\t\tcurrentBoard.items.splice(currentIndex, 1)\r\n\t\t\t\tsetboards(boards.map(b => {\r\n\t\t\t\t\tif (b.id === board.id) {\r\n\t\t\t\t\t\treturn board\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (b.id === currentBoard.id) {\r\n\t\t\t\t\t\treturn currentBoard\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn b\r\n\t\t\t\t}))\r\n\t\t\t}\r\n\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tconst deleteItem = (item: Item) => {\r\n\t\tsetboards(boards.map(b => {\r\n\t\t\tlet index = b.items.indexOf(item)\r\n\t\t\tif (b === boards[2]) {\r\n\t\t\t\tb.items.splice(index, 1)\r\n\t\t\t}\r\n\t\t\treturn b\r\n\t\t}))\r\n\t}\r\n\r\n\tconst setColor = (board: Board) => {\r\n\r\n\t\tswitch (board) {\r\n\t\t\tcase boards[0]:\r\n\t\t\t\treturn 'crimson'\r\n\t\t\tcase boards[1]:\r\n\t\t\t\treturn '#e1f415'\r\n\t\t\tcase boards[2]:\r\n\t\t\t\treturn 'lightgreen'\r\n\t\t}\r\n\r\n\t\treturn 'white'\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div className={theme ? 'trello trello_dark' : 'trello'} >\r\n\t\t\t{boards.map(board =>\r\n\r\n\t\t\t\t<BoardCard\r\n\t\t\t\t\tboard={board}\r\n\t\t\t\t\tonDragOver={e => dragOverHandler(e)}\r\n\t\t\t\t\tonDrop={e => dropCardHandler(e, board)}\r\n\t\t\t\t\tkey={board.id}\r\n\t\t\t\t>\r\n\t\t\t\t\t{board.items.map(item =>\r\n\t\t\t\t\t\t<ItemCard\r\n\t\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\t\titem={item}\r\n\t\t\t\t\t\t\tcolor={() => setColor(board)}\r\n\t\t\t\t\t\t\tonDragOver={e => dragOverHandler(e)}\r\n\t\t\t\t\t\t\tonDragLeave={e => dragLeaveHandler(e)}\r\n\t\t\t\t\t\t\tonDragStart={e => dragStartHandler(e, board, item)}\r\n\t\t\t\t\t\t\tonDragEnd={e => dragEndHandler(e)}\r\n\t\t\t\t\t\t\tonDrop={e => dropHandler(e, board, item)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{/* Отображение удаления записи на последней доске */}\r\n\t\t\t\t\t\t\t{board === boards[2] ? <Delete deleteClick={() => deleteItem(item)} /> : null}\r\n\t\t\t\t\t\t</ItemCard>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</BoardCard>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Trello\r\n","import React, { FC, useContext} from 'react'\r\nimport ThemeContext from '../../context'\r\nimport style from './SwitchTheme.module.css'\r\n\r\n\r\n\r\nconst SwitchTheme:FC = () => {\r\n\r\n\r\n\tconst {theme,setTheme} = useContext(ThemeContext)\r\n\r\n\treturn (\r\n\t\t<div className={style.container} onClick={()=> setTheme(!theme)} >\r\n\t\t<input   checked={theme} onChange={()=> console.log('dark')}  type=\"checkbox\" className={style.checkbox} id=\"checkbox\" />\r\n\t\t<label  form= 'checkbox'  className={style.label}>\r\n\t\t<div  className={style.ball}></div>\r\n    \t</label> \r\n  \t\t</div> \r\n\t)\r\n}\r\n\r\nexport default SwitchTheme\r\n","import React, { FC, } from 'react'\r\nimport { BrowserRouter, Route, NavLink, Switch, Redirect } from 'react-router-dom'\r\nimport App from './pages/App'\r\nimport About from './pages/About'\r\nimport Trello from './pages/Trello'\r\nimport SwitchTheme from './components/switchTheme/SwitchTheme'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Router:FC = () => {\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<BrowserRouter>\r\n\r\n\t\t<div className=\"nav\">\r\n\t\t\t<div className=\"nav__container\">\r\n\r\n\t\t\t\t<NavLink className=\"link about\" to='/about'>About</NavLink> \r\n\t\t\t\t<NavLink className=\"link app\" to='/app'>App </NavLink>\r\n\t\t\t\t<NavLink className=\"link app\" to='/trello'>Trello</NavLink>\r\n\t\t\t</div>\r\n\t\t\t<SwitchTheme />\r\n\t\t</div>\r\n\t\r\n\t\t\t\r\n\t\t<Switch>\r\n\t\t\t<Route exact path=\"/\" component={About}  />\r\n\t\t\t<Route path=\"/app\" component={App} /> \r\n\t\t\t<Route path=\"/trello\" component={Trello} />\r\n\t\t\t<Redirect to='/'/>\r\n\t\t</Switch>\t\r\n\t\t\r\n\t\t\t\r\n\t\t</BrowserRouter>\r\n\t)\r\n}\r\n\r\nexport default Router\r\n","import React, {  useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Router from './Router';\nimport ThemeContext from './context'\n\nfunction Main(){\n  const [theme, setTheme] = useState(false)\n  // const Theme = createContext({theme,setTheme})\n\n  return(\n    <ThemeContext.Provider value={{theme,setTheme}}>\n      <Router />\n    </ThemeContext.Provider>\n  )\n}\n\nReactDOM.render(\n  <Main/> ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}